{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vishw\\\\OneDrive\\\\Desktop\\\\reatjs\\\\project1\\\\src\\\\Components\\\\Post\\\\Updatenewpost.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Updatenewpost(props) {\n  _s();\n\n  const [array, setArray] = useState([]);\n  let profile = JSON.parse(localStorage.getItem('profile'));\n\n  async function fetchlist() {\n    let url = \"http://127.0.0.1:8000/api/showfile/\" + props.Postid;\n    fetch(url).then(response => response.json()).then(data => {\n      console.log(data);\n      setArray(data);\n      setTitle(data.title);\n    });\n  }\n\n  useEffect(() => {\n    fetchlist();\n  }, []);\n  const [error, setError] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\"); // const account = profile.name;\n\n  const [result1, setResult1] = useState(\"\");\n  let {\n    id\n  } = useParams();\n  const [imagedata, setDImagedata] = useState(\"\");\n\n  const handleChange = file => {\n    console.log(file[0]);\n    setDImagedata(file[0]);\n  };\n\n  const handleChangeckeditor = (e, editor) => {\n    const data = editor.getData();\n    setDescription(data);\n  };\n\n  async function updatearticle(img, e) {\n    e.preventDefault();\n    const fData = {\n      \"title\": title,\n      \"description\": description,\n      \"account\": \"ashish\"\n    };\n    let url = \"http://127.0.0.1:8000/api/updatefile/\" + props.Postid;\n    axios.put(url, fData).then(res => {\n      console.log(\"done\", res);\n\n      if (data.message != undefined) {\n        setResult1(data.message);\n        console.log(\"result\", result1);\n\n        if (result1 === \"success\") {\n          setError(\"success\");\n        }\n      }\n    });\n    console.warn(fData); // const requestOptions = {\n    //     method: 'PUT',\n    //     headers: { 'Content-Type': 'application/json' },\n    //     body: JSON.stringify(fData)\n    // };\n    // fetch(url, requestOptions)\n    //     .then(response => response.json())\n    //     .then(data => {\n    //         if(data.message!=undefined){\n    //             setResult1(data.message);\n    //             console.log(\"result\",result1);\n    //             if(result1 === \"success\" ){\n    //                 setError(\"success\");\n    //             }\n    //         }\n    //     }\n    //     );\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \" \",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \" \",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"h3 mb-3 font-weight-bold text-center\",\n              children: \"Update Post\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"inputEmail\",\n              className: \"sr-only\",\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              placeholder: \"Enter Title\",\n              defaultValue: array.title,\n              onChange: e => {\n                console.log(e.target.value);\n                setTitle(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 200\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"\",\n              className: \"sr-only\",\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(CKEditor, {\n              editor: ClassicEditor,\n              data: array.description,\n              onChange: handleChangeckeditor\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"uploadfile\",\n              className: \"sr-only\",\n              children: \"Upload File \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"image\",\n              id: \"image\",\n              type: \"file\",\n              onChange: e => handleChange(e.target.files)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-md btn-primary btn-block\",\n              onClick: e => {\n                updatearticle(imagedata, e);\n              },\n              children: \"Update Post\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 31\n            }, this), error === \"success\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"alert alert-success\",\n              role: \"alert\",\n              children: \"Inserted Successfully\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 52\n            }, this) : null, error, id, title, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 32\n            }, this), description, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 38\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(Updatenewpost, \"ZGYCMsLuh+d2nz1gfne7lGBgAeI=\", false, function () {\n  return [useParams];\n});\n\n_c = Updatenewpost;\n\nvar _c;\n\n$RefreshReg$(_c, \"Updatenewpost\");","map":{"version":3,"sources":["C:/Users/vishw/OneDrive/Desktop/reatjs/project1/src/Components/Post/Updatenewpost.js"],"names":["axios","useEffect","useState","useParams","CKEditor","ClassicEditor","Updatenewpost","props","array","setArray","profile","JSON","parse","localStorage","getItem","fetchlist","url","Postid","fetch","then","response","json","data","console","log","setTitle","title","error","setError","description","setDescription","result1","setResult1","id","imagedata","setDImagedata","handleChange","file","handleChangeckeditor","e","editor","getData","updatearticle","img","preventDefault","fData","put","res","message","undefined","warn","target","value","files"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\nexport default function Updatenewpost(props) {\r\n\r\n    const [array, setArray] = useState([]);\r\n\r\n   \r\n\r\n    let profile = JSON.parse(localStorage.getItem('profile'));\r\n\r\n    async function fetchlist() {\r\n        let url = \"http://127.0.0.1:8000/api/showfile/\" + props.Postid;\r\n        fetch(url).then(response => response.json()).then(\r\n            data => {console.log(data);setArray(data);setTitle(data.title);},\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchlist()\r\n    }, [])\r\n\r\n    const [error, setError] = useState(\"\");\r\n    const [title, setTitle] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n\r\n    // const account = profile.name;\r\n    const [result1, setResult1] = useState(\"\");\r\n\r\n\r\n    let { id } = useParams();\r\n\r\n    const [imagedata, setDImagedata] = useState(\"\");\r\n\r\n    const handleChange = (file) => {\r\n        console.log(file[0]);\r\n        setDImagedata(file[0]);\r\n    };\r\n    \r\n    const handleChangeckeditor = (e, editor) => {\r\n        const data = editor.getData();\r\n        setDescription(data);\r\n    }\r\n\r\n    async function updatearticle(img,e) {\r\n    \r\n        e.preventDefault();\r\n        const fData = {\r\n            \"title\":title,\r\n            \"description\":description,\r\n            \"account\":\"ashish\"\r\n        };\r\n\r\n        let url = \"http://127.0.0.1:8000/api/updatefile/\" + props.Postid;\r\n        axios.put(url,fData)\r\n        .then((res) => {\r\n            console.log(\"done\",res);\r\n            if(data.message!=undefined){\r\n                            setResult1(data.message);\r\n                            console.log(\"result\",result1);\r\n                            if(result1 === \"success\" ){\r\n                                setError(\"success\");\r\n                            }\r\n                        }\r\n        });\r\n        console.warn(fData)\r\n        // const requestOptions = {\r\n        //     method: 'PUT',\r\n        //     headers: { 'Content-Type': 'application/json' },\r\n        //     body: JSON.stringify(fData)\r\n        // };\r\n        // fetch(url, requestOptions)\r\n        //     .then(response => response.json())\r\n        //     .then(data => {\r\n        //         if(data.message!=undefined){\r\n        //             setResult1(data.message);\r\n        //             console.log(\"result\",result1);\r\n        //             if(result1 === \"success\" ){\r\n        //                 setError(\"success\");\r\n        //             }\r\n        //         }\r\n        //     }\r\n        //     );\r\n    }\r\n\r\n    return (<>\r\n        <section className=\"\">\r\n            <div className=\" \">\r\n                <div className=\"\" >\r\n                    <div className=\" \">\r\n                        <h1 className=\"h3 mb-3 font-weight-bold text-center\">Update Post</h1>\r\n                        <label for=\"inputEmail\" className=\"sr-only\">Title</label>\r\n                        <input type=\"text\" className=\"form-control\" placeholder={\"Enter Title\"} defaultValue={array.title} onChange={(e) => {console.log(e.target.value); setTitle(e.target.value)}} /><br />\r\n                        <label for=\"\" className=\"sr-only\">Description</label>\r\n                        {/* <input type=\"text\" className=\"form-control\" placeholder=\"Enter Description\" value={description} onChange={(e) => setDescription(e.target.value)} /><br /> */}\r\n\r\n                        <CKEditor editor={ClassicEditor} data={array.description} onChange={handleChangeckeditor} />\r\n                        <br />\r\n\r\n                        <label for=\"uploadfile\" className=\"sr-only\">Upload File </label>\r\n                        <input name=\"image\" id=\"image\" type=\"file\" onChange={(e) => handleChange(e.target.files)} />\r\n                        <br />\r\n\r\n                        <button className=\"btn btn-md btn-primary btn-block\" onClick={(e)=>{updatearticle(imagedata,e)}} >Update Post</button>\r\n                        <br /><br />\r\n\r\n                        {\r\n                            error === \"success\" ? (<div class=\"alert alert-success\" role=\"alert\">\r\n                            Inserted Successfully\r\n                        </div>) : null\r\n                        }\r\n                        {error}\r\n                        {id}\r\n                        {title}<br />\r\n                        {description}<br />\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    </>);\r\n}"]},"metadata":{},"sourceType":"module"}