{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vishw\\\\OneDrive\\\\Desktop\\\\reatjs\\\\project1\\\\src\\\\Components\\\\Post\\\\Updatenewpost.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Updatenewpost(props) {\n  _s();\n\n  const [array, setArray] = useState([]);\n  let profile = JSON.parse(localStorage.getItem('profile'));\n\n  async function fetchlist() {\n    let url = \"http://127.0.0.1:8000/api/showfile/\" + props.Postid;\n    fetch(url).then(response => response.json()).then(data => setArray(data));\n\n    if (array.message === \"success\") {\n      setError( /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"alert alert-success\",\n        role: \"alert\",\n        children: \"Inserted Successfully\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this));\n      setTitle(\"\");\n      setDescription(\"\");\n      setDImagedata(\"\");\n    }\n  }\n\n  useEffect(() => {\n    fetchlist();\n  }, []);\n  const [error, setError] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\"); // const account = profile.name;\n\n  let {\n    id\n  } = useParams();\n  const [imagedata, setDImagedata] = useState(\"\");\n\n  const handleChange = file => {\n    console.log(file[0]);\n    setDImagedata(file[0]);\n  };\n\n  const handleChangeckeditor = (e, editor) => {\n    const data = editor.getData();\n    setDescription(data);\n  };\n\n  function updatearticle(img, e) {\n    e.preventDefault();\n    const fData = {\n      \"title\": title,\n      \"description\": description,\n      \"account\": \"ashish\"\n    }; // axios.put(\"http://127.0.0.1:8000/api/updatefile/58\",fData)\n    // .then((res) => {\n    //     console.log(\"done\",res)\n    // });\n    // console.warn(fData)\n\n    const requestOptions = {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(fData)\n    };\n    let url = \"http://127.0.0.1:8000/api/updatefile/\" + props.Postid;\n    fetch(url, requestOptions).then(response => response.json()).then(data => console.log(\"done\", data));\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \" \",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \" \",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"h3 mb-3 font-weight-bold text-center\",\n              children: \"Update Post\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"inputEmail\",\n              className: \"sr-only\",\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              placeholder: \"Enter Title\",\n              defaultValue: array.title,\n              onChange: e => {\n                console.log(e.target.value);\n                setTitle(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 200\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"\",\n              className: \"sr-only\",\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(CKEditor, {\n              editor: ClassicEditor,\n              data: array.description,\n              onChange: handleChangeckeditor\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"uploadfile\",\n              className: \"sr-only\",\n              children: \"Upload File \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"image\",\n              id: \"image\",\n              type: \"file\",\n              onChange: e => handleChange(e.target.files)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-md btn-primary btn-block\",\n              onClick: e => {\n                updatearticle(imagedata, e);\n              },\n              children: \"Update Post\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 31\n            }, this), error ? error : null, id, title, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 32\n            }, this), description, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 38\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(Updatenewpost, \"hjU9x0hQl7utEELe2ZzoSRWuuak=\", false, function () {\n  return [useParams];\n});\n\n_c = Updatenewpost;\n\nvar _c;\n\n$RefreshReg$(_c, \"Updatenewpost\");","map":{"version":3,"sources":["C:/Users/vishw/OneDrive/Desktop/reatjs/project1/src/Components/Post/Updatenewpost.js"],"names":["axios","useEffect","useState","useParams","CKEditor","ClassicEditor","Updatenewpost","props","array","setArray","profile","JSON","parse","localStorage","getItem","fetchlist","url","Postid","fetch","then","response","json","data","message","setError","setTitle","setDescription","setDImagedata","error","title","description","id","imagedata","handleChange","file","console","log","handleChangeckeditor","e","editor","getData","updatearticle","img","preventDefault","fData","requestOptions","method","headers","body","stringify","target","value","files"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\nexport default function Updatenewpost(props) {\r\n\r\n    const [array, setArray] = useState([]);\r\n   \r\n\r\n    let profile = JSON.parse(localStorage.getItem('profile'));\r\n\r\n    async function fetchlist() {\r\n        let url = \"http://127.0.0.1:8000/api/showfile/\" + props.Postid;\r\n        fetch(url).then(response => response.json()).then(\r\n            data => setArray(data),\r\n        )\r\n        if (array.message === \"success\") {\r\n            setError(\r\n                <div class=\"alert alert-success\" role=\"alert\">\r\n                    Inserted Successfully\r\n                </div>\r\n            );\r\n            setTitle(\"\");\r\n            setDescription(\"\");\r\n            setDImagedata(\"\");\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchlist()\r\n    }, [])\r\n\r\n    const [error, setError] = useState(\"\");\r\n    const [title, setTitle] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n\r\n    // const account = profile.name;\r\n\r\n\r\n    let { id } = useParams();\r\n\r\n    const [imagedata, setDImagedata] = useState(\"\");\r\n\r\n    const handleChange = (file) => {\r\n        console.log(file[0]);\r\n        setDImagedata(file[0]);\r\n    };\r\n    \r\n    const handleChangeckeditor = (e, editor) => {\r\n        const data = editor.getData();\r\n        setDescription(data);\r\n    }\r\n\r\n    function updatearticle(img,e) {\r\n    \r\n        e.preventDefault();\r\n        const fData = {\r\n            \"title\":title,\r\n            \"description\":description,\r\n            \"account\":\"ashish\"\r\n        };\r\n\r\n        // axios.put(\"http://127.0.0.1:8000/api/updatefile/58\",fData)\r\n        // .then((res) => {\r\n        //     console.log(\"done\",res)\r\n        // });\r\n        // console.warn(fData)\r\n        const requestOptions = {\r\n            method: 'PUT',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(fData)\r\n        };\r\n        let url = \"http://127.0.0.1:8000/api/updatefile/\" + props.Postid;\r\n        fetch(url, requestOptions)\r\n            .then(response => response.json())\r\n            .then(data =>\r\n                console.log(\"done\", data)\r\n            );\r\n    }\r\n\r\n    return (<>\r\n        <section className=\"\">\r\n            <div className=\" \">\r\n                <div className=\"\" >\r\n                    <div className=\" \">\r\n                        <h1 className=\"h3 mb-3 font-weight-bold text-center\">Update Post</h1>\r\n                        <label for=\"inputEmail\" className=\"sr-only\">Title</label>\r\n                        <input type=\"text\" className=\"form-control\" placeholder={\"Enter Title\"} defaultValue={array.title} onChange={(e) => {console.log(e.target.value); setTitle(e.target.value)}} /><br />\r\n                        <label for=\"\" className=\"sr-only\">Description</label>\r\n                        {/* <input type=\"text\" className=\"form-control\" placeholder=\"Enter Description\" value={description} onChange={(e) => setDescription(e.target.value)} /><br /> */}\r\n\r\n                        <CKEditor editor={ClassicEditor} data={array.description} onChange={handleChangeckeditor} />\r\n                        <br />\r\n\r\n                        <label for=\"uploadfile\" className=\"sr-only\">Upload File </label>\r\n                        <input name=\"image\" id=\"image\" type=\"file\" onChange={(e) => handleChange(e.target.files)} />\r\n                        <br />\r\n\r\n                        <button className=\"btn btn-md btn-primary btn-block\" onClick={(e)=>{updatearticle(imagedata,e)}} >Update Post</button>\r\n                        <br /><br />\r\n                        {error ? error : null}\r\n                        {id}\r\n                        {title}<br />\r\n                        {description}<br />\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    </>);\r\n}"]},"metadata":{},"sourceType":"module"}