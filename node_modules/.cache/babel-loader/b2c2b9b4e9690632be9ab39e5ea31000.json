{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vishw\\\\OneDrive\\\\Desktop\\\\reactjs nodejs\\\\client\\\\src\\\\Components\\\\Post\\\\Updatenewpost.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic'; // import { response } from \"../../../../server1/app\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Updatenewpost(props) {\n  _s();\n\n  const [array, setArray] = useState('');\n  let profile = JSON.parse(localStorage.getItem('profile')); // async function fetchlist() {\n\n  let url = \"http://localhost:3001/showfiles/\" + props.Postid; //     fetch(url).then(response => response.json()).then(\n  //         data => { console.log(data); setArray(data); setTitle(data); },\n  //     )\n  // }\n\n  const fetchlist = () => {\n    axios.get(url).then(response => {\n      // console.log(response.data[0]);\n      setArray(response.data[0]);\n    });\n  };\n\n  useEffect(() => {\n    fetchlist();\n  }, []);\n  const [error, setError] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\"); // const account = profile.name;\n\n  const [result1, setResult1] = useState(\"\");\n  let {\n    id\n  } = useParams();\n  const [imagedata, setDImagedata] = useState(\"\"); // const handleChange = (file) => {\n  //     console.log(file[0]);\n  //     setDImagedata(file[0]);\n  // };\n\n  const handleChangeckeditor = (e, editor) => {\n    const data = editor.getData();\n    setDescription(data);\n  };\n\n  async function handlefile(file) {\n    // let file = e.target.files[0];\n    setDImagedata(file[0]); // console.log(file)\n  }\n\n  async function updatearticle(e) {\n    e.preventDefault(); // const fData = {\n    //     \"title\": title,\n    //     \"description\": description,\n    //     \"account\": \"ashish\",\n    //     \"filename\": imagedata\n    // };\n\n    const fData = new FormData();\n    fData.append(\"file_name\", imagedata);\n    fData.append(\"title\", title);\n    fData.append(\"description\", description);\n    fData.append(\"account\", \"ashish\"); // fData.append(\"tag\", tags);\n\n    console.log(fData);\n\n    for (var pair of fData.entries()) {\n      console.log(pair[0] + ', ' + pair[1]);\n    }\n\n    let url = \"http://localhost:3001/updatedata/\" + props.Postid;\n    axios.post(url, fData).then(res => {\n      // if (res.data.message != undefined) {\n      //     setResult1(res.data.message);\n      //     console.log(\"result\", result1);\n      //     if (result1 === \"success\") {\n      //         setError(\"success\");\n      //     }\n      // }\n      console.log(res);\n    });\n    console.log(fData); // const requestOptions = {\n    //     method: 'PUT',\n    //     headers: { 'Content-Type': 'application/json' },\n    //     body: JSON.stringify(fData)\n    // };\n    // fetch(url, requestOptions)\n    //     .then(response => response.json())\n    //     .then(data => {\n    //         if(data.message!=undefined){\n    //             setResult1(data.message);\n    //             console.log(\"result\",result1);\n    //             if(result1 === \"success\" ){\n    //                 setError(\"success\");\n    //             }\n    //         }\n    //     }\n    //     );\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \" \",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \" \",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"h3 mb-3 font-weight-bold text-center\",\n              children: \"Update Post\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"inputEmail\",\n              className: \"sr-only\",\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              placeholder: \"Enter Title\",\n              defaultValue: array.title,\n              onChange: e => {\n                console.log(e.target.value);\n                setTitle(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 202\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"\",\n              className: \"sr-only\",\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(CKEditor, {\n              editor: ClassicEditor,\n              data: array.description,\n              onChange: handleChangeckeditor\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"uploadfile\",\n              className: \"sr-only\",\n              children: \"Upload File \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"file_name\",\n              id: \"file_name\",\n              type: \"file\",\n              onChange: e => handlefile(e.target.files)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-md btn-primary btn-block\",\n              onClick: e => {\n                updatearticle(e);\n              },\n              children: \"Update Post\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 31\n            }, this), error === \"success\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"alert alert-success\",\n              role: \"alert\",\n              children: \"Inserted Successfully\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 52\n            }, this) : null, error, title, image]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(Updatenewpost, \"HZBdr1yGRqfMD9SS65cSYERh+gQ=\", false, function () {\n  return [useParams];\n});\n\n_c = Updatenewpost;\n\nvar _c;\n\n$RefreshReg$(_c, \"Updatenewpost\");","map":{"version":3,"sources":["C:/Users/vishw/OneDrive/Desktop/reactjs nodejs/client/src/Components/Post/Updatenewpost.js"],"names":["axios","useEffect","useState","useParams","CKEditor","ClassicEditor","Updatenewpost","props","array","setArray","profile","JSON","parse","localStorage","getItem","url","Postid","fetchlist","get","then","response","data","error","setError","title","setTitle","description","setDescription","result1","setResult1","id","imagedata","setDImagedata","handleChangeckeditor","e","editor","getData","handlefile","file","updatearticle","preventDefault","fData","FormData","append","console","log","pair","entries","post","res","target","value","files","image"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n// import { response } from \"../../../../server1/app\";\r\n\r\nexport default function Updatenewpost(props) {\r\n\r\n    const [array, setArray] = useState('');\r\n\r\n\r\n    let profile = JSON.parse(localStorage.getItem('profile'));\r\n\r\n    // async function fetchlist() {\r\n        let url = \"http://localhost:3001/showfiles/\" + props.Postid;\r\n    //     fetch(url).then(response => response.json()).then(\r\n    //         data => { console.log(data); setArray(data); setTitle(data); },\r\n    //     )\r\n    // }\r\n\r\n    const fetchlist = ()=>{\r\n        axios.get(url).then(response=>{\r\n            // console.log(response.data[0]);\r\n            setArray(response.data[0])\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchlist()\r\n    }, [])\r\n\r\n    const [error, setError] = useState(\"\");\r\n    const [title, setTitle] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n\r\n    // const account = profile.name;\r\n    const [result1, setResult1] = useState(\"\");\r\n\r\n\r\n    let { id } = useParams();\r\n\r\n    const [imagedata, setDImagedata] = useState(\"\");\r\n\r\n    // const handleChange = (file) => {\r\n    //     console.log(file[0]);\r\n    //     setDImagedata(file[0]);\r\n    // };\r\n\r\n    const handleChangeckeditor = (e, editor) => {\r\n        const data = editor.getData();\r\n        setDescription(data);\r\n    }\r\n\r\n    async function handlefile(file) {\r\n        // let file = e.target.files[0];\r\n        setDImagedata(file[0]);\r\n        // console.log(file)\r\n    }\r\n\r\n    async function updatearticle(e) {\r\n        e.preventDefault();\r\n        // const fData = {\r\n        //     \"title\": title,\r\n        //     \"description\": description,\r\n        //     \"account\": \"ashish\",\r\n        //     \"filename\": imagedata\r\n        // };\r\n        \r\n        const fData = new FormData();\r\n        fData.append(\"file_name\", imagedata);\r\n        fData.append(\"title\", title);\r\n        fData.append(\"description\", description);\r\n        fData.append(\"account\", \"ashish\");\r\n        // fData.append(\"tag\", tags);\r\n        console.log(fData);\r\n        for (var pair of fData.entries()) {\r\n            console.log(pair[0]+ ', ' + pair[1]); \r\n        }\r\n\r\n        let url = \"http://localhost:3001/updatedata/\" + props.Postid;\r\n        axios.post(url, fData)\r\n            .then((res) => {\r\n                // if (res.data.message != undefined) {\r\n                //     setResult1(res.data.message);\r\n                //     console.log(\"result\", result1);\r\n                //     if (result1 === \"success\") {\r\n                //         setError(\"success\");\r\n                //     }\r\n                // }\r\n                console.log(res);\r\n            });\r\n            console.log(fData)\r\n        // const requestOptions = {\r\n        //     method: 'PUT',\r\n        //     headers: { 'Content-Type': 'application/json' },\r\n        //     body: JSON.stringify(fData)\r\n        // };\r\n        // fetch(url, requestOptions)\r\n        //     .then(response => response.json())\r\n        //     .then(data => {\r\n        //         if(data.message!=undefined){\r\n        //             setResult1(data.message);\r\n        //             console.log(\"result\",result1);\r\n        //             if(result1 === \"success\" ){\r\n        //                 setError(\"success\");\r\n        //             }\r\n        //         }\r\n        //     }\r\n        //     );\r\n    }\r\n\r\n    return (<>\r\n        <section className=\"\">\r\n\r\n            <div className=\" \">\r\n                <div className=\"\" >\r\n                    <div className=\" \">\r\n                        <h1 className=\"h3 mb-3 font-weight-bold text-center\">Update Post</h1>\r\n                        <label for=\"inputEmail\" className=\"sr-only\">Title</label>\r\n                        <input type=\"text\" className=\"form-control\" placeholder={\"Enter Title\"} defaultValue={array.title} onChange={(e) => { console.log(e.target.value); setTitle(e.target.value) }} /><br />\r\n                        <label for=\"\" className=\"sr-only\">Description</label>\r\n\r\n                        <CKEditor editor={ClassicEditor} data={array.description} onChange={handleChangeckeditor} />\r\n                        <br />\r\n\r\n                        <label for=\"uploadfile\" className=\"sr-only\">Upload File </label>\r\n                        <input name=\"file_name\" id=\"file_name\" type=\"file\" onChange={(e) => handlefile(e.target.files)} />\r\n                        <br />\r\n\r\n                        <button className=\"btn btn-md btn-primary btn-block\" onClick={(e) => { updatearticle(e) }} >Update Post</button>\r\n                        <br /><br />\r\n                        {\r\n                            error === \"success\" ? (<div class=\"alert alert-success\" role=\"alert\">\r\n                                Inserted Successfully\r\n                            </div>) : null\r\n                        }\r\n                        {error}\r\n\r\n                        {title}\r\n                        {image}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    </>);\r\n}"]},"metadata":{},"sourceType":"module"}