{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vishw\\\\OneDrive\\\\Desktop\\\\reactjs nodejs\\\\client\\\\src\\\\Components\\\\Post\\\\Updatenewpost.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Updatenewpost(props) {\n  _s();\n\n  const [array, setArray] = useState('');\n  let profile = JSON.parse(localStorage.getItem('profile')); // async function fetchlist() {\n  //     let url = \"http://localhost:3001/showfiles/\" + props.Postid;\n  //     fetch(url).then(response => response.json()).then(\n  //         data => { console.log(data); setArray(data); setTitle(data); },\n  //     )\n  // }\n\n  cons;\n  useEffect(() => {\n    fetchlist();\n  }, []);\n  const [error, setError] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\"); // const account = profile.name;\n\n  const [result1, setResult1] = useState(\"\");\n  let {\n    id\n  } = useParams();\n  const [imagedata, setDImagedata] = useState(\"\"); // const handleChange = (file) => {\n  //     console.log(file[0]);\n  //     setDImagedata(file[0]);\n  // };\n\n  const handleChangeckeditor = (e, editor) => {\n    const data = editor.getData();\n    setDescription(data);\n  };\n\n  async function handlefile(e) {\n    let file = e.target.files[0];\n    console.log(file); // let url = \"http://localhost:3001/updatedata/\" + props.Postid;\n    // axios.post(url, file)\n    // .then((res) => {\n    //     console.log(\"file\",res);\n    // });\n  }\n\n  async function updatearticle(img, e) {\n    e.preventDefault();\n    const fData = {\n      \"title\": title,\n      \"description\": description,\n      \"account\": \"ashish\"\n    };\n    let url = \"http://localhost:3001/updatedata/\" + props.Postid;\n    axios.post(url, fData).then(res => {\n      if (res.data.message != undefined) {\n        setResult1(res.data.message);\n        console.log(\"result\", result1);\n\n        if (result1 === \"success\") {\n          setError(\"success\");\n        }\n      }\n    }); // const requestOptions = {\n    //     method: 'PUT',\n    //     headers: { 'Content-Type': 'application/json' },\n    //     body: JSON.stringify(fData)\n    // };\n    // fetch(url, requestOptions)\n    //     .then(response => response.json())\n    //     .then(data => {\n    //         if(data.message!=undefined){\n    //             setResult1(data.message);\n    //             console.log(\"result\",result1);\n    //             if(result1 === \"success\" ){\n    //                 setError(\"success\");\n    //             }\n    //         }\n    //     }\n    //     );\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \" \",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(Updatenewpost, \"HZBdr1yGRqfMD9SS65cSYERh+gQ=\", false, function () {\n  return [useParams];\n});\n\n_c = Updatenewpost;\n\nvar _c;\n\n$RefreshReg$(_c, \"Updatenewpost\");","map":{"version":3,"sources":["C:/Users/vishw/OneDrive/Desktop/reactjs nodejs/client/src/Components/Post/Updatenewpost.js"],"names":["axios","useEffect","useState","useParams","CKEditor","ClassicEditor","Updatenewpost","props","array","setArray","profile","JSON","parse","localStorage","getItem","cons","fetchlist","error","setError","title","setTitle","description","setDescription","result1","setResult1","id","imagedata","setDImagedata","handleChangeckeditor","e","editor","data","getData","handlefile","file","target","files","console","log","updatearticle","img","preventDefault","fData","url","Postid","post","then","res","message","undefined"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\nexport default function Updatenewpost(props) {\r\n\r\n    const [array, setArray] = useState('');\r\n\r\n\r\n    let profile = JSON.parse(localStorage.getItem('profile'));\r\n\r\n    // async function fetchlist() {\r\n    //     let url = \"http://localhost:3001/showfiles/\" + props.Postid;\r\n    //     fetch(url).then(response => response.json()).then(\r\n    //         data => { console.log(data); setArray(data); setTitle(data); },\r\n    //     )\r\n    // }\r\n\r\n    cons\r\n\r\n    useEffect(() => {\r\n        fetchlist()\r\n    }, [])\r\n\r\n    const [error, setError] = useState(\"\");\r\n    const [title, setTitle] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n\r\n    // const account = profile.name;\r\n    const [result1, setResult1] = useState(\"\");\r\n\r\n\r\n    let { id } = useParams();\r\n\r\n    const [imagedata, setDImagedata] = useState(\"\");\r\n\r\n    // const handleChange = (file) => {\r\n    //     console.log(file[0]);\r\n    //     setDImagedata(file[0]);\r\n    // };\r\n\r\n    const handleChangeckeditor = (e, editor) => {\r\n        const data = editor.getData();\r\n        setDescription(data);\r\n    }\r\n\r\n    async function handlefile(e) {\r\n        let file = e.target.files[0];\r\n        console.log(file)\r\n\r\n        // let url = \"http://localhost:3001/updatedata/\" + props.Postid;\r\n        // axios.post(url, file)\r\n        // .then((res) => {\r\n        //     console.log(\"file\",res);\r\n        // });\r\n    }\r\n\r\n    async function updatearticle(img, e) {\r\n        e.preventDefault();\r\n        const fData = {\r\n            \"title\": title,\r\n            \"description\": description,\r\n            \"account\": \"ashish\"\r\n        };\r\n\r\n        let url = \"http://localhost:3001/updatedata/\" + props.Postid;\r\n        axios.post(url, fData)\r\n            .then((res) => {\r\n                if (res.data.message != undefined) {\r\n                    setResult1(res.data.message);\r\n                    console.log(\"result\", result1);\r\n                    if (result1 === \"success\") {\r\n                        setError(\"success\");\r\n                    }\r\n                }\r\n            });\r\n        // const requestOptions = {\r\n        //     method: 'PUT',\r\n        //     headers: { 'Content-Type': 'application/json' },\r\n        //     body: JSON.stringify(fData)\r\n        // };\r\n        // fetch(url, requestOptions)\r\n        //     .then(response => response.json())\r\n        //     .then(data => {\r\n        //         if(data.message!=undefined){\r\n        //             setResult1(data.message);\r\n        //             console.log(\"result\",result1);\r\n        //             if(result1 === \"success\" ){\r\n        //                 setError(\"success\");\r\n        //             }\r\n        //         }\r\n        //     }\r\n        //     );\r\n    }\r\n\r\n    return (<>\r\n        <section className=\"\">\r\n\r\n            {/* {array.map((item,i)=>{\r\n                <li key={i}>{item}</li>\r\n            })} */}\r\n            <div className=\" \">\r\n                <div className=\"\" >\r\n                    {/* <div className=\" \">\r\n                        <h1 className=\"h3 mb-3 font-weight-bold text-center\">Update Post</h1>\r\n                        <label for=\"inputEmail\" className=\"sr-only\">Title</label>\r\n                        <input type=\"text\" className=\"form-control\" placeholder={\"Enter Title\"} defaultValue={array.title} onChange={(e) => { console.log(e.target.value); setTitle(e.target.value) }} /><br />\r\n                        <label for=\"\" className=\"sr-only\">Description</label>\r\n\r\n                        <CKEditor editor={ClassicEditor} data={array.description} onChange={handleChangeckeditor} />\r\n                        <br />\r\n\r\n                        <label for=\"uploadfile\" className=\"sr-only\">Upload File </label>\r\n                        <input name=\"image\" id=\"image\" type=\"file\" onChange={(e) => handlefile(e)} />\r\n                        <br />\r\n\r\n                        <button className=\"btn btn-md btn-primary btn-block\" onClick={(e) => { updatearticle(imagedata, e) }} >Update Post</button>\r\n                        <br /><br />\r\n                        {\r\n                            error === \"success\" ? (<div class=\"alert alert-success\" role=\"alert\">\r\n                                Inserted Successfully\r\n                            </div>) : null\r\n                        }\r\n                        {error}\r\n                    </div> */}\r\n                </div>\r\n            </div>\r\n        </section>\r\n    </>);\r\n}"]},"metadata":{},"sourceType":"module"}