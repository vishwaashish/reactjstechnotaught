{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vishw\\\\OneDrive\\\\Desktop\\\\reactjs nodejs\\\\client\\\\src\\\\Components\\\\Post\\\\Updatenewpost.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic'; // import { response } from \"../../../../server1/app\";\n\nimport InputTags from \"react-input-tags-hooks\";\nimport 'react-input-tags-hooks/build/index.css'; // required\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Updatenewpost(props) {\n  _s();\n\n  const [array, setArray] = useState('');\n  const [pname, setPname] = useState('');\n  const [tags, setTags] = useState([]);\n\n  const getTags = tags => {\n    setTags(tags);\n  };\n\n  let profile = JSON.parse(localStorage.getItem('user-info')); // async function fetchlist() {\n\n  let url = \"http://localhost:3001/showfiles/\" + props.Postid; //     fetch(url).then(response => response.json()).then(\n  //         data => { console.log(data); setArray(data); setTitle(data); },\n  //     )\n  // }\n\n  const fetchlist = () => {\n    axios.get(url).then(response => {\n      // console.log(response.data[0]);\n      setArray(response.data[0]);\n    });\n  };\n\n  useEffect(() => {\n    fetchlist();\n    setPname(JSON.parse(localStorage.getItem('user-info')));\n  }, []);\n  const [error, setError] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\"); // const account = profile.name;\n\n  const [result1, setResult1] = useState(\"\");\n  let {\n    id\n  } = useParams();\n  const [imagedata, setDImagedata] = useState(\"\"); // const handleChange = (file) => {\n  //     console.log(file[0]);\n  //     setDImagedata(file[0]);\n  // };\n\n  const handleChangeckeditor = (e, editor) => {\n    const data = editor.getData();\n    setDescription(data);\n  };\n\n  async function handlefile(file) {\n    // let file = e.target.files[0];\n    setDImagedata(file[0]);\n    setResult1(URL.createObjectURL(file[0])); // console.log(file)\n  }\n\n  async function updatearticle(e) {\n    e.preventDefault(); // const fData = {\n    //     \"title\": title,\n    //     \"description\": description,\n    //     \"account\": \"ashish\",\n    //     \"filename\": imagedata\n    // };\n\n    const account = pname.name;\n    const fData = new FormData();\n    fData.append(\"filename\", imagedata);\n    fData.append(\"title\", title);\n    fData.append(\"description\", description);\n    fData.append(\"account\", account);\n    fData.append(\"tag\", tags);\n    console.log(fData);\n\n    for (var pair of fData.entries()) {\n      console.log(pair[0] + ', ' + pair[1]);\n    }\n\n    let url = \"http://localhost:3001/updatedata/\" + props.Postid;\n    axios.post(url, fData).then(res => {\n      // if (res.data.message != undefined) {\n      //     setResult1(res.data.message);\n      //     console.log(\"result\", result1);\n      //     if (result1 === \"success\") {\n      //         setError(\"success\");\n      //     }\n      // }\n      console.log(res);\n    });\n    console.log(fData); // const requestOptions = {\n    //     method: 'PUT',\n    //     headers: { 'Content-Type': 'application/json' },\n    //     body: JSON.stringify(fData)\n    // };\n    // fetch(url, requestOptions)\n    //     .then(response => response.json())\n    //     .then(data => {\n    //         if(data.message!=undefined){\n    //             setResult1(data.message);\n    //             console.log(\"result\",result1);\n    //             if(result1 === \"success\" ){\n    //                 setError(\"success\");\n    //             }\n    //         }\n    //     }\n    //     );\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \" \",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \" \",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"h3 mb-3 font-weight-bold text-center\",\n              children: \"Update Post\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"inputEmail\",\n              className: \"sr-only\",\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              placeholder: \"Enter Title\",\n              defaultValue: array.title,\n              onChange: e => {\n                console.log(e.target.value);\n                setTitle(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 202\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"\",\n              className: \"sr-only\",\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(CKEditor, {\n              editor: ClassicEditor,\n              data: array.description,\n              style: stylingObject.ckeditor,\n              onChange: handleChangeckeditor\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"uploadfile\",\n              className: \"sr-only\",\n              children: \"Upload File \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"file_name\",\n              id: \"filename\",\n              type: \"file\",\n              onChange: e => handlefile(e.target.files)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(InputTags, {\n              onTag: getTags,\n              tagColor: '#48c774',\n              placeHolder: \"Press enter to add tags\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 32\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-md btn-primary btn-block\",\n              onClick: e => {\n                updatearticle(e);\n              },\n              children: \"Update Post\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 31\n            }, this), error === \"success\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"alert alert-success\",\n              role: \"alert\",\n              children: \"Inserted Successfully\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 52\n            }, this) : null, error, title, /*#__PURE__*/_jsxDEV(\"img\", {\n              src: result1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(Updatenewpost, \"gLTtt3dAH5kX8wuVF4uBMcggeqY=\", false, function () {\n  return [useParams];\n});\n\n_c = Updatenewpost;\nvar stylingObject = {\n  div: {\n    color: \"red\",\n    border: \"1px solid red\"\n  },\n  input: {\n    margin: \"2px\",\n    padding: \"5px\"\n  },\n  ckeditor: {\n    minHeight: \"400px\"\n  }\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Updatenewpost\");","map":{"version":3,"sources":["C:/Users/vishw/OneDrive/Desktop/reactjs nodejs/client/src/Components/Post/Updatenewpost.js"],"names":["axios","useEffect","useState","useParams","CKEditor","ClassicEditor","InputTags","Updatenewpost","props","array","setArray","pname","setPname","tags","setTags","getTags","profile","JSON","parse","localStorage","getItem","url","Postid","fetchlist","get","then","response","data","error","setError","title","setTitle","description","setDescription","result1","setResult1","id","imagedata","setDImagedata","handleChangeckeditor","e","editor","getData","handlefile","file","URL","createObjectURL","updatearticle","preventDefault","account","name","fData","FormData","append","console","log","pair","entries","post","res","target","value","stylingObject","ckeditor","files","div","color","border","input","margin","padding","minHeight"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n// import { response } from \"../../../../server1/app\";\r\nimport InputTags from \"react-input-tags-hooks\";\r\nimport 'react-input-tags-hooks/build/index.css'; // required\r\n\r\nexport default function Updatenewpost(props) {\r\n\r\n    const [array, setArray] = useState('');\r\n    const [pname, setPname] = useState('');\r\n    const [tags, setTags] = useState([])\r\n    const getTags = (tags) => {\r\n        setTags(tags);\r\n      }\r\n\r\n    let profile = JSON.parse(localStorage.getItem('user-info'));\r\n\r\n    // async function fetchlist() {\r\n        let url = \"http://localhost:3001/showfiles/\" + props.Postid;\r\n    //     fetch(url).then(response => response.json()).then(\r\n    //         data => { console.log(data); setArray(data); setTitle(data); },\r\n    //     )\r\n    // }\r\n\r\n    const fetchlist = ()=>{\r\n        axios.get(url).then(response=>{\r\n            // console.log(response.data[0]);\r\n            setArray(response.data[0])\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchlist();\r\n        setPname(JSON.parse(localStorage.getItem('user-info')));\r\n    }, [])\r\n\r\n    const [error, setError] = useState(\"\");\r\n    const [title, setTitle] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n\r\n    // const account = profile.name;\r\n    const [result1, setResult1] = useState(\"\");\r\n\r\n\r\n    let { id } = useParams();\r\n\r\n    const [imagedata, setDImagedata] = useState(\"\");\r\n\r\n    // const handleChange = (file) => {\r\n    //     console.log(file[0]);\r\n    //     setDImagedata(file[0]);\r\n    // };\r\n\r\n    const handleChangeckeditor = (e, editor) => {\r\n        const data = editor.getData();\r\n        setDescription(data);\r\n    }\r\n\r\n    async function handlefile(file) {\r\n        // let file = e.target.files[0];\r\n        setDImagedata(file[0]);\r\n        setResult1(URL.createObjectURL(file[0]))\r\n        // console.log(file)\r\n    }\r\n\r\n    async function updatearticle(e) {\r\n        e.preventDefault();\r\n        // const fData = {\r\n        //     \"title\": title,\r\n        //     \"description\": description,\r\n        //     \"account\": \"ashish\",\r\n        //     \"filename\": imagedata\r\n        // };\r\n        const account = pname.name;\r\n\r\n        const fData = new FormData();\r\n        fData.append(\"filename\", imagedata);\r\n        fData.append(\"title\", title);\r\n        fData.append(\"description\", description);\r\n        fData.append(\"account\", account);\r\n        fData.append(\"tag\", tags);\r\n        console.log(fData);\r\n        for (var pair of fData.entries()) {\r\n            console.log(pair[0]+ ', ' + pair[1]); \r\n        }\r\n\r\n        let url = \"http://localhost:3001/updatedata/\" + props.Postid;\r\n        axios.post(url, fData)\r\n            .then((res) => {\r\n                // if (res.data.message != undefined) {\r\n                //     setResult1(res.data.message);\r\n                //     console.log(\"result\", result1);\r\n                //     if (result1 === \"success\") {\r\n                //         setError(\"success\");\r\n                //     }\r\n                // }\r\n                console.log(res);\r\n            });\r\n            console.log(fData)\r\n        // const requestOptions = {\r\n        //     method: 'PUT',\r\n        //     headers: { 'Content-Type': 'application/json' },\r\n        //     body: JSON.stringify(fData)\r\n        // };\r\n        // fetch(url, requestOptions)\r\n        //     .then(response => response.json())\r\n        //     .then(data => {\r\n        //         if(data.message!=undefined){\r\n        //             setResult1(data.message);\r\n        //             console.log(\"result\",result1);\r\n        //             if(result1 === \"success\" ){\r\n        //                 setError(\"success\");\r\n        //             }\r\n        //         }\r\n        //     }\r\n        //     );\r\n    }\r\n\r\n    return (<>\r\n        <section className=\"\">\r\n\r\n            <div className=\" \">\r\n                <div className=\"\" >\r\n                    <div className=\" \">\r\n                        <h1 className=\"h3 mb-3 font-weight-bold text-center\">Update Post</h1>\r\n                        <label for=\"inputEmail\" className=\"sr-only\">Title</label>\r\n                        <input type=\"text\" className=\"form-control\" placeholder={\"Enter Title\"} defaultValue={array.title} onChange={(e) => { console.log(e.target.value); setTitle(e.target.value) }} /><br />\r\n                        <label for=\"\" className=\"sr-only\">Description</label>\r\n\r\n                        <CKEditor editor={ClassicEditor} data={array.description} style={stylingObject.ckeditor} onChange={handleChangeckeditor} />\r\n                        <br />\r\n\r\n                        <label for=\"uploadfile\" className=\"sr-only\">Upload File </label>\r\n                        <input name=\"file_name\" id=\"filename\" type=\"file\"  onChange={(e) => handlefile(e.target.files)} />\r\n                        <br />\r\n\r\n                        <InputTags\r\n                            onTag={getTags}\r\n                            tagColor={'#48c774'}\r\n                            placeHolder=\"Press enter to add tags\"\r\n                        /><br/><br/>\r\n                        <button className=\"btn btn-md btn-primary btn-block\" onClick={(e) => { updatearticle(e) }} >Update Post</button>\r\n                        <br /><br />\r\n                        {\r\n                            error === \"success\" ? (<div class=\"alert alert-success\" role=\"alert\">\r\n                                Inserted Successfully\r\n                            </div>) : null\r\n                        }\r\n                        {error}\r\n\r\n                        {title}\r\n\r\n                        <img src={result1}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    </>);\r\n}\r\n\r\n\r\nvar stylingObject = {\r\n    div: {\r\n      color: \"red\",\r\n      border: \"1px solid red\"\r\n    }, input: {\r\n      margin: \"2px\",\r\n      padding: \"5px\"\r\n    },\r\n    ckeditor: {\r\n        minHeight: \"400px\"\r\n    }\r\n  }"]},"metadata":{},"sourceType":"module"}